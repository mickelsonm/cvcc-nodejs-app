{"version":3,"sources":["../../src/config/config.js"],"names":["envVarsSchema","joi","object","NODE_ENV","string","valid","required","PORT","number","HOST","hostname","trim","default","error","value","envVars","validate","process","env","abortEarly","convert","allowUnknown","Error","message","config","isTest","isDevelopment","logger","level","LOGGER_LEVEL","enabled","LOGGER_ENABLED","server","port","host"],"mappings":";;;;;;AAAA;;;;AAGA;;;;AAEA;AACA,MAAMA,gBAAgBC,cACrBC,MADqB,CACd;AACRC,WAAUF,cACTG,MADS,GAETC,KAFS,CAEH,CAAC,aAAD,EAAgB,YAAhB,EAA8B,MAA9B,EAAsC,WAAtC,CAFG,EAGTC,QAHS,EADF;AAKRC,OAAMN,cAAIO,MAAJ,GAAaF,QAAb,EALE;AAMRG,OAAMR,cACLG,MADK,GAELM,QAFK,GAGLC,IAHK,GAILC,OAJK,CAIG,WAJH;AANE,CADc,EAarBN,QAbqB,EAAtB;;AAJA;;;AAmBA,MAAM;AACLO,MADK;AAELC,QAAOC;AAFF,IAGFd,cAAIe,QAAJ,CAAaC,QAAQC,GAArB,EAA0BlB,aAA1B,EAAyC;AAC5CmB,aAAY,KADgC;AAE5CC,UAAS,IAFmC;AAG5CC,eAAc;AAH8B,CAAzC,CAHJ;AAQA,IAAIR,KAAJ,EAAW;AACV,OAAM,IAAIS,KAAJ,CAAW,2CAA0CT,MAAMU,OAAQ,EAAnE,CAAN;AACA;;AAED,MAAMC,SAAS;AACdN,MAAKH,QAAQZ,QADC;AAEdsB,SAAQV,QAAQZ,QAAR,KAAqB,MAFf;AAGduB,gBAAeX,QAAQZ,QAAR,KAAqB,aAHtB;AAIdwB,SAAQ;AACPC,SAAOb,QAAQc,YADR;AAEPC,WAASf,QAAQgB;AAFV,EAJM;AAQdC,SAAQ;AACPC,QAAMlB,QAAQR,IADP;AAEP2B,QAAMnB,QAAQN;AAEf;AAJQ,EARM,EAAf;;kBAeee,M","file":"config.js","sourcesContent":["import joi from 'joi';\n\n// Load environment variables from the `.env` file.\nimport 'dotenv/config';\n\n// Check for required env variables and their types.\nconst envVarsSchema = joi\n.object({\nNODE_ENV: joi\n.string()\n.valid(['development', 'production', 'test', 'provision'])\n.required(),\nPORT: joi.number().required(),\nHOST: joi\n.string()\n.hostname()\n.trim()\n.default('localhost'),\n})\n.required();\n\nconst {\n\terror,\n\tvalue: envVars\n} = joi.validate(process.env, envVarsSchema, {\n\tabortEarly: false,\n\tconvert: true,\n\tallowUnknown: true\n});\nif (error) {\n\tthrow new Error(`Environment variables validation error: ${error.message}`);\n}\n\nconst config = {\n\tenv: envVars.NODE_ENV,\n\tisTest: envVars.NODE_ENV === 'test',\n\tisDevelopment: envVars.NODE_ENV === 'development',\n\tlogger: {\n\t\tlevel: envVars.LOGGER_LEVEL,\n\t\tenabled: envVars.LOGGER_ENABLED\n\t},\n\tserver: {\n\t\tport: envVars.PORT,\n\t\thost: envVars.HOST\n\t}\n\t// ...\n};\n\nexport default config;\n"]}